#!/usr/bin/env node

/**
 * Module dependencies.
 */
//
// var app = require('../app');
// var debug = require('debug')('biddemux:server');
// var http = require('http');
//
// /**
//  * Get port from environment and store in Express.
//  */
//
// var port = normalizePort(process.env.PORT || '3000');
// app.set('port', port);
//
// /**
//  * Create HTTP server.
//  */
//
// var server = http.createServer(app);
//
// /**
//  * Listen on provided port, on all network interfaces.
//  */
//
// server.listen(port);
// server.on('error', onError);
// server.on('listening', onListening);
//
// /**
//  * Normalize a port into a number, string, or false.
//  */
//
// function normalizePort(val) {
//   var port = parseInt(val, 10);
//
//   if (isNaN(port)) {
//     // named pipe
//     return val;
//   }
//
//   if (port >= 0) {
//     // port number
//     return port;
//   }
//
//   return false;
// }
//
// /**
//  * Event listener for HTTP server "error" event.
//  */
//
// function onError(error) {
//   if (error.syscall !== 'listen') {
//     throw error;
//   }
//
//   var bind = typeof port === 'string'
//     ? 'Pipe ' + port
//     : 'Port ' + port;
//
//   // handle specific listen errors with friendly messages
//   switch (error.code) {
//     case 'EACCES':
//       console.error(bind + ' requires elevated privileges');
//       process.exit(1);
//       break;
//     case 'EADDRINUSE':
//       console.error(bind + ' is already in use');
//       process.exit(1);
//       break;
//     default:
//       throw error;
//   }
// }
//
// /**
//  * Event listener for HTTP server "listening" event.
//  */
//
// function onListening() {
//   var addr = server.address();
//   var bind = typeof addr === 'string'
//     ? 'pipe ' + addr
//     : 'port ' + addr.port;
//   debug('Listening on ' + bind);
// }

/**
 * Created by lilu on 2018/8/3.
 */
// require('dotenv').config()
const bidnameCloudFuncs = require('../cloud/bidname')
const app = require('express')()
const cors = require('cors')
const demux = require('../demux')
const postRoutes = require('../api/bidname/router')
const io = require('../utils/io')

app.use(cors())

app.use('/posts', postRoutes)
app.get('/getOpenOrderList', bidnameCloudFuncs.getOpenOrderList)
app.get('/getOrderByAcc', bidnameCloudFuncs.getOrderByAcc)
app.get('/getOrderBySeller', bidnameCloudFuncs.getOrderListBySeller)

const server = app.listen(process.env.PORT, () => console.info(`Example app listening on port ${process.env.PORT}!`))
io.connect(server)

demux.watch()
